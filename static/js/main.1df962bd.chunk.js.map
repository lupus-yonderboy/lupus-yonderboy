{"version":3,"sources":["Container.js","Home.js","About.js","Header.js","Posts.js","index.js","App.js"],"names":["Container","children","className","Home","About","Header","Posts","props","state","posts","loading","time","error","showAuthors","map","post","key","Id","Title","_authorName","Content","url","this","setState","timer","setTimeout","fetch","then","res","json","catch","finally","authors","author","Name","Author","renderPosts","Component","rootElement","document","getElementById","ReactDOM","render","to","exact","path","component"],"mappings":"sRAIaA,G,MAAY,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC1B,OACE,yBAAKC,UAAU,aACb,6BACGD,MCJIE,EAAO,WAClB,OACE,kBAAC,EAAD,aCFSC,EAAQ,WACnB,OACE,kBAAC,EAAD,yGCFSC,G,MAAS,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SACvB,OACE,yBAAKC,UAAU,UACVD,K,gDCHIK,EAAb,YACI,WAAYC,GAAQ,IAAD,8BACjB,4CAAMA,KACDC,MAAQ,CACXC,MAAO,GACPC,QAAS,KACTC,KAAM,KACNC,MAAO,KACPC,YAAa,MAPE,EADvB,yEAYcJ,GAAQ,IAAD,OACjB,OAAOA,EAAMK,KAAI,SAACC,GAChB,OACE,yBAAKC,IAAKD,EAAKE,IACb,6BACGF,EAAKG,OAER,6BACG,EAAKV,MAAMK,YAAcE,EAAKI,YAAc,MAE/C,6BACGJ,EAAKK,eAvBlB,2CA8BwB,IAAD,OAEbC,EACF,4EAGJC,KAAKC,SAAS,CAAEb,SAAS,KAEX,SAARc,EAASb,GACbc,YAAW,WACL,EAAKjB,MAAME,SACbC,GAAQ,GACR,EAAKY,SAAS,CAAEZ,KAAMA,IACtBa,EAAMb,IAEN,EAAKY,SAAS,CAAEZ,KAAM,MAEvB,IAGLa,CAAM,GAENE,MAAML,EAAM,SACTM,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACE,GAAU,IAAD,uBACd,YAAiBA,EAAjB,+CAAuB,CAAC,IAAfd,EAAc,QACrB,EAAKQ,SAAS,CACZd,MAAM,GAAD,mBAAO,EAAKD,MAAMC,OAAlB,CAAyBM,OAHpB,sFAOfe,OAAM,WACL,EAAKP,SAAS,CAAEX,MAAO,UAExBmB,SAAQ,WACP,EAAKR,SAAS,CAAEb,SAAS,OAG7BgB,MAAML,EAAM,WACTM,MAAK,SAACC,GACL,OAAOA,EAAIC,UAEZF,MAAK,SAACE,GACL,IAAIpB,EAAQ,EAAKD,MAAMC,MACnBuB,EAAU,GAFA,uBAGd,YAAmBH,EAAnB,+CAAyB,CAAC,IAAjBI,EAAgB,QACvBD,EAAQC,EAAOhB,IAAMgB,EAAOC,MAJhB,6GAMd,YAAiBzB,EAAjB,+CAAwB,CAAC,IAAhBM,EAAe,QACtBA,EAAKI,YAAca,EAAQjB,EAAKoB,SAPpB,kFASd,EAAKZ,SAAS,CACZd,MAAOA,EACPI,aAAa,SArFvB,+BA2FI,OACE,kBAAC,EAAD,KACGS,KAAKd,MAAME,QAAUY,KAAKd,MAAMG,KAAOW,KAAKd,MAAMI,MAClDU,KAAKc,YAAYd,KAAKd,MAAMC,YA9FrC,GAA2B4B,aCErBC,G,MAAcC,SAASC,eAAe,SAE5CC,IAASC,OACP,mBCAiB,WACjB,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,KACE,6BACE,0BAAMxC,UAAU,eACd,kBAAC,IAAD,CAAMyC,GAAG,IAAIzC,UAAU,eAAvB,SAIF,0BAAMA,UAAU,eACd,kBAAC,IAAD,CAAMyC,GAAG,SAASzC,UAAU,eAA5B,UAIF,0BAAMA,UAAU,eACd,kBAAC,IAAD,CAAMyC,GAAG,SAASzC,UAAU,eAA5B,YAMN,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO0C,OAAK,EAACC,KAAK,IAAIC,UAAW3C,IACjC,kBAAC,IAAD,CAAO0C,KAAK,SAASC,UAAW1C,IAChC,kBAAC,IAAD,CAAOyC,KAAK,SAASC,UAAWxC,QDzBtC,MACAgC,K","file":"static/js/main.1df962bd.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Container.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div className='container'>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const Home = () => {\n  return (\n    <Container>\n      Hi.\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const About = () => {\n  return (\n    <Container>\n      \"Chaos, Mr. Who,\" Lupus Yonderboy said. \"That is our mode and modus. That is our central kick.\"\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport './Header.css';\n\nexport const Header = ({ children }) => {\n  return (\n    <div className='header'>\n        {children}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\nimport { Container } from './Container';\n\n\nexport class Posts extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        posts: [],\n        loading: null,\n        time: null,\n        error: null,\n        showAuthors: null,\n      };\n    }\n\n  renderPosts(posts) {\n    return posts.map((post) => {\n      return (\n        <div key={post.Id}>\n          <div>\n            {post.Title}\n          </div>\n          <div>\n            {this.state.showAuthors ? post._authorName : null}\n          </div>\n          <div>\n            {post.Content}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentWillMount() {\n    const environment = process.env.NODE_ENV || 'production';\n    const url = environment === 'production'\n      ? 'https://lupus-yonderboy-go-env.wv5mqwfbqj.us-east-1.elasticbeanstalk.com/'\n      : 'https://localhost:5000/';\n\n    this.setState({ loading: true });\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.loading) {\n          time += 50;\n          this.setState({ time: time });\n          timer(time);\n        } else {\n          this.setState({ time: 0 });\n        }\n      }, 10);\n    }\n\n    timer(0);\n\n    fetch(url + 'posts')\n      .then((res) => {\n        return res.json();\n      })\n      .then((json) => {\n        for (let post of json) {\n          this.setState({\n            posts: [ ...this.state.posts, post ]\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n\n    fetch(url + 'authors')\n      .then((res) => {\n        return res.json();\n      })\n      .then((json) => {\n        let posts = this.state.posts;\n        let authors = {};\n        for (let author of json) {\n          authors[author.Id] = author.Name;\n        }\n        for (let post of posts) {\n          post._authorName = authors[post.Author];\n        }\n        this.setState({\n          posts: posts,\n          showAuthors: true\n        });\n      })\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.loading ? this.state.time : this.state.error}\n        {this.renderPosts(this.state.posts)}\n      </Container>\n    );\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <App />,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom';\n\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Header } from './Header';\nimport { Posts } from './Posts';\nimport './App.css';\n\nexport const App = () => {\n  return (\n    <Router>\n      <Header>\n        <div>\n          <span className='header-span'>\n            <Link to='/' className='header-link'>\n              HOME\n            </Link>\n          </span>\n          <span className='header-span'>\n            <Link to='/about' className='header-link'>\n              ABOUT\n            </Link>\n          </span>\n          <span className='header-span'>\n            <Link to='/posts' className='header-link'>\n              POSTS\n            </Link>\n          </span>\n        </div>\n      </Header>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/posts' component={Posts} />\n      </Switch>\n    </Router>\n  );\n};\n"],"sourceRoot":""}
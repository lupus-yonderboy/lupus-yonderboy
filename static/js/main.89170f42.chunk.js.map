{"version":3,"sources":["reducers.js","Container.js","Home.js","About.js","Header.js","Post.js","Posts.js","actions.js","index.js","App.js"],"names":["initialState","posts","Container","children","className","Home","About","Header","Post","Component","Posts","props","state","loading","time","error","map","post","key","Id","to","Title","hasOwnProperty","_authorName","Content","slice","url","fetchPosts","fetch","then","res","json","fetchAuthors","this","length","setState","timer","setTimeout","Promise","all","setPosts","postsRes","authorsRes","authors","author","Name","push","Author","associatePostsWithAuthors","catch","finally","renderPosts","connect","dispatch","type","rootElement","document","getElementById","store","createStore","action","Object","assign","ReactDOM","render","exact","path","component"],"mappings":"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","file":"static/js/main.89170f42.chunk.js","sourcesContent":["const initialState = {\n  posts: [],\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return Object.assign({}, state, { posts: action.posts });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nimport './Container.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div className='container'>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const Home = () => {\n  return (\n    <Container>\n      Hi.\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const About = () => {\n  return (\n    <Container>\n      \"Chaos, Mr. Who,\" Lupus Yonderboy said. \"That is our mode and modus. That is our central kick.\"\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport './Header.css';\n\nexport const Header = ({ children }) => {\n  return (\n    <div className='header'>\n        {children}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { Container } from './Container';\n\nexport class Post extends Component {\n  render() {\n    return (\n      <Container>\n        Yo.\n      </Container>\n    );\n  }\n};\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport { Container } from './Container';\nimport './Posts.css';\n\nimport { setPosts } from './actions';\n\nclass Posts extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: null,\n        time: null,\n        error: null,\n      };\n    }\n\n  renderPosts(posts) {\n    return posts.map((post) => {\n      return (\n        <div key={post.Id}>\n          <Link to={`/posts/${post.Id}`} className=\"title\">\n            {post.Title}\n          </Link>\n          <div className=\"author\">\n            {post.hasOwnProperty('_authorName')\n                ? post._authorName\n                : 'Anonymous'}\n          </div>\n          <div className=\"content\">\n            {post.Content.slice(0, 230) + ' ...'}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    const environment = process.env.NODE_ENV || 'production';\n    const url = environment === 'production'\n      ? 'https://lupus-yonderboy-go-env.wv5mqwfbqj.us-east-1.elasticbeanstalk.com/'\n      : 'http://localhost:5000/';\n\n    const fetchPosts = fetch(url + 'posts')\n      .then((res) => res.json());\n\n    const fetchAuthors = fetch(url + 'authors')\n      .then((res) => res.json());\n\n    const associatePostsWithAuthors = ({ postsRes, authorsRes }) => {\n      const authors = {};\n      const posts = [];\n      for (let author of authorsRes) {\n        authors[author.Id] = author.Name;\n      }\n      for (let post of postsRes) {\n        posts.push({\n          _authorName: authors[post.Author],\n          ...post,\n        });\n      }\n      return posts;\n    };\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.loading) {\n          time += 10;\n          this.setState({ time: time });\n          timer(time);\n        }\n      }, 10);\n    };\n\n    if (this.props.posts.length) {\n      return;\n    }\n\n    this.setState({ loading: true });\n    \n    timer(0);\n\n    Promise.all([fetchPosts, fetchAuthors])\n      .then((res) => {\n        this.props.setPosts(\n          associatePostsWithAuthors({\n            postsRes: res[0],\n            authorsRes: res[1],\n          }),\n        );\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n  } // end componentDidMount\n\n  render() {\n    return (\n      <Container>\n        {this.state.loading\n            ? this.state.time\n            : this.state.error}\n        {this.renderPosts(this.props.posts)}\n      </Container>\n    );\n  }\n};\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Posts);\n","export const setPosts = (posts) => ({\n  type: 'SET_POSTS',\n  posts\n});\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { reducers } from './reducers';\n// import * as serviceWorker from './serviceWorker';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <App store={store} />,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Header } from './Header';\nimport { Post } from './Post';\nimport Posts from './Posts';\n\nimport './App.css';\n\nexport const App = (props) => {\n  return (\n    <Provider store={props.store}>\n      <Router>\n        <Header>\n          <div>\n            <span className='header-span'>\n              <Link to='/' className='header-link'>\n                HOME\n              </Link>\n            </span>\n            <span className='header-span'>\n              <Link to='/about' className='header-link'>\n                ABOUT\n              </Link>\n            </span>\n            <span className='header-span'>\n              <Link to='/posts' className='header-link'>\n                POSTS\n              </Link>\n            </span>\n          </div>\n        </Header>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/posts/:postId' component={Post} />\n          <Route path='/posts' component={Posts} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n"],"sourceRoot":""}
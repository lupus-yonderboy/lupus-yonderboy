{"version":3,"sources":["Container.js","Home.js","About.js","Header.js","Posts.js","index.js","App.js"],"names":["Container","children","className","Home","About","Header","Posts","props","state","posts","authorsLoading","postsLoading","time","error","map","post","key","Id","Title","hasOwnProperty","_authorName","Content","slice","url","this","setState","timer","setTimeout","fetch","then","res","json","catch","finally","authors","author","Name","Author","renderPosts","Component","rootElement","document","getElementById","ReactDOM","render","to","exact","path","component"],"mappings":"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","file":"static/js/main.94c085a4.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Container.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div className='container'>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const Home = () => {\n  return (\n    <Container>\n      Hi.\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport { Container } from './Container';\n\nexport const About = () => {\n  return (\n    <Container>\n      \"Chaos, Mr. Who,\" Lupus Yonderboy said. \"That is our mode and modus. That is our central kick.\"\n    </Container>\n  );\n};\n","import React from 'react';\n\nimport './Header.css';\n\nexport const Header = ({ children }) => {\n  return (\n    <div className='header'>\n        {children}\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nimport { Container } from './Container';\nimport './Posts.css';\n\nexport class Posts extends Component {\n    constructor(props) {\n      super(props);\n      this.state = {\n        posts: [],\n        authorsLoading: null,\n        postsLoading: null,\n        time: null,\n        error: null,\n      };\n    }\n\n  renderPosts(posts) {\n    return posts.map((post) => {\n      return (\n        <div key={post.Id}>\n          <div className=\"title\">\n            {post.Title}\n          </div>\n          <div className=\"author\">\n            {post.hasOwnProperty('_authorName') ? post._authorName : 'Anonymous'}\n          </div>\n          <div className=\"content\">\n            {post.Content.slice(0, 230) + ' ...'}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    const environment = process.env.NODE_ENV || 'production';\n    const url = environment === 'production'\n      ? 'https://lupus-yonderboy-go-env.wv5mqwfbqj.us-east-1.elasticbeanstalk.com/'\n      : 'https://localhost:5000/';\n\n    this.setState({\n      postsLoading: true,\n      authorsLoading: true\n    });\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.postsLoading) {\n          time += 10;\n          this.setState({ time: time });\n          timer(time);\n        }\n      }, 10);\n    }\n\n    timer(0);\n\n    fetch(url + 'posts')\n      .then((res) => {\n        return res.json();\n      })\n      .then((json) => {\n        for (let post of json) {\n          this.setState({\n            posts: [ ...this.state.posts, post ]\n          });\n        }\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ postsLoading: false });\n      })\n\n    fetch(url + 'authors')\n      .then((res) => {\n        return res.json();\n      })\n      .then((json) => {\n        let posts = this.state.posts;\n        let authors = {};\n        for (let author of json) {\n          authors[author.Id] = author.Name;\n        }\n        for (let post of posts) {\n          post._authorName = authors[post.Author];\n        }\n        this.setState({\n          posts: posts\n        });\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ authorsLoading: false });\n      })\n  }\n\n  render() {\n    return (\n      <Container>\n        {this.state.postsLoading ? this.state.time : this.state.error}\n        {this.renderPosts(this.state.posts)}\n        {\n          this.state.authorsLoading || this.state.postsLoading\n            ? null\n            : <div className=\"smile\">:)</div>\n        }\n      </Container>\n    );\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import * as serviceWorker from './serviceWorker';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <App />,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom';\n\nimport { Home } from './Home';\nimport { About } from './About';\nimport { Header } from './Header';\nimport { Posts } from './Posts';\nimport './App.css';\n\nexport const App = () => {\n  return (\n    <Router>\n      <Header>\n        <div>\n          <span className='header-span'>\n            <Link to='/' className='header-link'>\n              HOME\n            </Link>\n          </span>\n          <span className='header-span'>\n            <Link to='/about' className='header-link'>\n              ABOUT\n            </Link>\n          </span>\n          <span className='header-span'>\n            <Link to='/posts' className='header-link'>\n              POSTS\n            </Link>\n          </span>\n        </div>\n      </Header>\n      <Switch>\n        <Route exact path='/' component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/posts' component={Posts} />\n      </Switch>\n    </Router>\n  );\n};\n"],"sourceRoot":""}
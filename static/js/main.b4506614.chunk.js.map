{"version":3,"sources":["reducers.js","Header.js","actions.js","Container.js","fetchPostsAndAuthors.js","About.js","Home.js","getPost.js","Post.js","Posts.js","helpers.js","App.js","index.js"],"names":["initialState","posts","post","darkMode","Header","children","className","setPosts","type","setPost","Container","fetchPostsAndAuthors","url","fetchPosts","fetch","then","res","json","fetchAuthors","Promise","all","postsRes","authorsRes","authors","author","Id","Name","push","_authorName","Author","associatePostsWithAuthors","About","this","props","length","Component","connect","state","dispatch","Home","getPost","id","find","p","Post","loading","time","error","parseInt","match","params","postId","setState","timer","setTimeout","catch","finally","prevProps","location","htmlParser","Parser","Title","moment","DateCreated","utc","format","DateUpdated","parse","Content","Posts","sort","a","b","Date","map","strippedContent","replace","key","to","onClick","hasOwnProperty","content","reversedContentArr","i","reversedContent","join","stopIndex","indexOf","slice","abbreviate","renderPosts","App","body","document","querySelector","minHeight","window","innerHeight","documentElement","clientHeight","style","store","setLight","setDark","exact","path","component","rootElement","getElementById","createStore","action","Object","assign","ReactDOM","render"],"mappings":"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","file":"static/js/main.b4506614.chunk.js","sourcesContent":["const initialState = {\n  posts: [],\n  post: {},\n  darkMode: true,\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return Object.assign({}, state, { posts: action.posts });\n    case 'SET_POST':\n      return Object.assign({}, state, { post: action.post });\n    case 'SET_DARK':\n      return Object.assign({}, state, { darkMode: true });\n    case 'SET_LIGHT':\n      return Object.assign({}, state, { darkMode: false });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nimport './Header.css';\n\nexport const Header = ({ children }) => {\n  return (\n    <div className='header'>\n        {children}\n    </div>\n  );\n};\n","export const setPosts = (posts) => ({\n  type: 'SET_POSTS',\n  posts\n});\n\nexport const setPost = (post) => ({\n  type: 'SET_POST',\n  post\n});\n\nexport const setDark = () => ({\n  type: 'SET_DARK'\n});\n\nexport const setLight = () => ({\n  type: 'SET_LIGHT'\n});\n","import React from 'react';\n\nimport './Container.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div className='container'>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","export const fetchPostsAndAuthors = () => {\n  const environment = process.env.NODE_ENV || \"production\";\n  const url =\n    environment === \"production\"\n      ? \"https://lupus-yonderboy-env.eba-ffg3cwzg.us-east-1.elasticbeanstalk.com/\"\n      : \"http://localhost:5000/\";\n\n  const fetchPosts = fetch(url + \"posts\").then((res) => res.json());\n\n  const fetchAuthors = fetch(url + \"authors\").then((res) => res.json());\n\n  const associatePostsWithAuthors = ({ postsRes, authorsRes }) => {\n    const authors = {};\n    const posts = [];\n    for (let author of authorsRes) {\n      authors[author.Id] = author.Name;\n    }\n    for (let post of postsRes) {\n      posts.push({\n        _authorName: authors[post.Author],\n        ...post,\n      });\n    }\n    return posts;\n  };\n\n  const fetchAll = () =>\n    Promise.all([fetchPosts, fetchAuthors]).then((res) => {\n      return associatePostsWithAuthors({\n        postsRes: res[0],\n        authorsRes: res[1],\n      });\n    });\n\n  return fetchAll();\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport { setPosts } from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass About extends Component {\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        \"Chaos, Mr. Who,\" Lupus Yonderboy said. \"That is our mode and modus. That is our central kick.\"\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(About);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport { setPosts } from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass Home extends Component {\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        Hi.\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","export const getPost = (posts, id) => {\n  return posts.find((p) => {\n    return p.Id === id;\n  });\n};\n","import React, { Component } from 'react';\nimport * as moment from 'moment';\nimport { Parser } from 'html-to-react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport './Posts.css'\nimport {\n  setPosts,\n  setPost\n} from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\nimport { getPost } from './getPost';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: null,\n      time: null,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    if (!this.props.posts.length) {\n      const timer = (time) => {\n        setTimeout(() => {\n          if (this.state.loading) {\n            time += 10;\n            this.setState({ time: time });\n            timer(time);\n          }\n        }, 10);\n      };\n\n      this.setState({ loading: true });\n      timer(0);\n\n      fetchPostsAndAuthors()\n        .then((posts) => {\n          const id = parseInt(this.props.match.params.postId);\n          const post = getPost(posts, id);\n          this.props.setPost(post);\n          this.props.setPosts(posts);\n        })\n        .catch(() => {\n          this.setState({ error: ':(' });\n        })\n        .finally(() => {\n          this.setState({ loading: false });\n        })\n    } else {\n      const id = parseInt(this.props.match.params.postId);\n      const post = getPost(this.props.posts, id);\n      this.props.setPost(post);\n    }\n\n  } // end componentDidMount\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      const id = parseInt(this.props.match.params.postId);\n      const post = getPost(this.props.posts, id);\n      this.props.setPost(post);\n    }\n  }\n\n  render() {\n    const htmlParser = new Parser();\n    return (\n      <Container>\n        {this.state.loading\n          ? this.state.time\n          : this.state.error}\n        {\n          this.state.loading\n            ?\n          null\n            :\n          <div>\n            <h1 className=\"title\">{this.props.post.Title}</h1>\n            <div className=\"author\">{this.props.post._authorName}</div>\n            <div className=\"date\">\n              {\n                moment(this.props.post.DateCreated).utc().format(\"MMM DD, YYYY [at] hh:mma\")\n              } {\n                this.props.post.DateUpdated === this.props.post.DateCreated\n                 ? null\n                 : `| updated ${moment(this.props.post.DateUpdated).utc().format(\"MMM DD, YYYY [at] hh:mma\")}`\n              } UTC\n            </div>\n            <div className=\"content\">{htmlParser.parse(this.props.post.Content)}</div>\n          </div>\n        }\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  post: state.post,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n  setPost: (post) => {\n    return dispatch(setPost(post));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Post);\n","import React, { Component } from 'react';\nimport * as moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport './Posts.css';\nimport {\n  setPosts,\n  setPost\n} from './actions';\nimport { abbreviate } from './helpers';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: null,\n      time: null,\n      error: null,\n    };\n  }\n\n  setPost(post) {\n    this.props.setPost(post);\n  }\n\n  renderPosts(posts) {\n    const sortedPosts = posts.sort((a, b) => {\n      return new Date(b.DateCreated) - new Date(a.DateCreated);\n    });\n    return sortedPosts.map((post) => {\n      const strippedContent = post.Content.replace(/<p>/g, '').replace(/<\\/p>/g, '');\n      return (\n        <div key={post.Id}>\n          <Link\n            to={`/posts/${post.Id}`}\n            onClick={() => this.setPost(post)}\n            className=\"index-title\"\n          >{post.Title}</Link>\n          <div className=\"index-author\">\n            {post.hasOwnProperty('_authorName')\n                ? post._authorName\n                : '?'}\n            {` | ${moment(post.DateCreated).utc().format(\"MMM DD, YYYY\")}`}\n          </div>\n          <div className=\"index-content\">\n            {abbreviate(strippedContent.slice(0, 230))}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.loading) {\n          time += 10;\n          this.setState({ time: time });\n          timer(time);\n        }\n      }, 10);\n    };\n\n    this.setState({ loading: true });\n    timer(0);\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n  } // end componentDidMount\n\n  render() {\n    return (\n      <Container>\n        {this.state.loading\n          ? this.state.time\n          : this.state.error}\n        {this.state.loading\n          ? null\n          : this.renderPosts(this.props.posts)}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  post: state.post,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n  setPost: (post) => {\n    return dispatch(setPost(post));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Posts);\n","export const abbreviate = (content) => {\n    const reversedContentArr = [];\n    for (let i = content.length; i > 0; i--) {\n        reversedContentArr.push(content[i]);\n    }\n    const reversedContent = reversedContentArr.join('');\n    const reverseStopIndex = reversedContent.indexOf('.')\n        || reversedContent.indexOf(':')\n        || reversedContent.indexOf(';')\n        || reversedContent.indexOf('—')\n        || reversedContent.indexOf(' ');\n    const stopIndex = 229 - reverseStopIndex;\n    return `${content.slice(0, stopIndex)} ...`;\n};\n","import React, { Component } from 'react';\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Provider } from 'react-redux';\nimport { Header } from './Header';\nimport {\n  setDark,\n  setLight\n} from './actions';\nimport About from './About';\nimport Home from './Home';\nimport Post from './Post';\nimport Posts from './Posts';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    const body = document.querySelector('body');\n    const minHeight = window.innerHeight\n      || document.documentElement.clientHeight\n      || body.clientHeight;\n    let outerDiv = document.querySelector('.outer-div');\n    outerDiv.style = `min-height: ${minHeight}px;`;\n    body.style = 'margin: 0;';\n  }\n\n  render() {\n    return (\n      <Provider store={this.props.store}>\n        <Router>\n          <div className={`outer-div ${this.props.darkMode ? 'dark' : 'light'}`}>\n            <Header>\n              <div>\n                <span className='header-span'>\n                  <Link to='/' className='header-link'>\n                    HOME\n                  </Link>\n                </span>\n                <span className='header-span'>\n                  <Link to='/about' className='header-link'>\n                    ABOUT\n                  </Link>\n                </span>\n                <span className='header-span'>\n                  <Link to='/posts' className='header-link'>\n                    POSTS\n                  </Link>\n                </span>\n                <span className='header-span'>\n                  <Link to='#'\n                    className='header-link'\n                    onClick={\n                      this.props.darkMode\n                        ? this.props.setLight\n                        : this.props.setDark\n                    }>\n                    {\n                      this.props.darkMode\n                        ? 'LIGHT'\n                        : 'DARK'\n                    }\n                  </Link>\n                </span>\n              </div>\n            </Header>\n            <Switch>\n              <Route exact path='/' component={Home} />\n              <Route path='/about' component={About} />\n              <Route path='/posts/:postId' component={Post} />\n              <Route path='/posts' component={Posts} />\n            </Switch>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  darkMode: state.darkMode,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setDark: () => {\n    return dispatch(setDark());\n  },\n  setLight: () => {\n    return dispatch(setLight());\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { reducers } from './reducers';\n// import * as serviceWorker from './serviceWorker';\n\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <App store={store} />,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n"],"sourceRoot":""}
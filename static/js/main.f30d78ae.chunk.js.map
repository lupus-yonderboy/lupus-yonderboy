{"version":3,"sources":["reducers.js","Header.js","Container.js","actions.js","fetchPostsAndAuthors.js","About.js","Home.js","Post.js","Posts.js","index.js","App.js"],"names":["initialState","posts","post","Header","children","className","Container","setPosts","type","setPost","fetchPostsAndAuthors","url","fetchPosts","fetch","then","res","json","fetchAuthors","Promise","all","postsRes","authorsRes","authors","author","Id","Name","push","_authorName","Author","associatePostsWithAuthors","About","this","props","length","Component","connect","state","dispatch","Home","Post","loading","time","error","Content","postId","parseInt","match","params","findPost","id","find","p","setState","timer","setTimeout","catch","finally","Title","Posts","map","key","to","onClick","hasOwnProperty","slice","renderPosts","rootElement","document","getElementById","store","createStore","action","Object","assign","ReactDOM","render","exact","path","component"],"mappings":"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","file":"static/js/main.f30d78ae.chunk.js","sourcesContent":["const initialState = {\n  posts: [],\n  post: {},\n};\n\nexport const reducers = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SET_POSTS':\n      return Object.assign({}, state, { posts: action.posts });\n    case 'SET_POST':\n      return Object.assign({}, state, { post: action.post });\n    default:\n      return state;\n  }\n};\n","import React from 'react';\n\nimport './Header.css';\n\nexport const Header = ({ children }) => {\n  return (\n    <div className='header'>\n        {children}\n    </div>\n  );\n};\n","import React from 'react';\n\nimport './Container.css';\n\nexport const Container = ({ children }) => {\n  return (\n    <div className='container'>\n      <div>\n        {children}\n      </div>\n    </div>\n  );\n};\n","export const setPosts = (posts) => ({\n  type: 'SET_POSTS',\n  posts\n});\n\nexport const setPost = (post) => ({\n  type: 'SET_POST',\n  post\n});\n","export const fetchPostsAndAuthors = () => {\n  const environment = process.env.NODE_ENV || 'production';\n  const url = environment === 'production'\n    ? 'https://lupus-yonderboy-go-env.wv5mqwfbqj.us-east-1.elasticbeanstalk.com/'\n    : 'http://localhost:5000/';\n\n  const fetchPosts = fetch(url + 'posts')\n    .then((res) => res.json());\n\n  const fetchAuthors = fetch(url + 'authors')\n    .then((res) => res.json());\n\n  const associatePostsWithAuthors = ({ postsRes, authorsRes }) => {\n    const authors = {};\n    const posts = [];\n    for (let author of authorsRes) {\n      authors[author.Id] = author.Name;\n    }\n    for (let post of postsRes) {\n      posts.push({\n        _authorName: authors[post.Author],\n        ...post,\n      });\n    }\n    return posts;\n  };\n\n  const fetchAll = () => Promise.all([fetchPosts, fetchAuthors])\n    .then((res) => {\n      return associatePostsWithAuthors({\n          postsRes: res[0],\n          authorsRes: res[1],\n        });\n      });\n\n  return fetchAll();\n};\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport { setPosts } from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass About extends Component {\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        \"Chaos, Mr. Who,\" Lupus Yonderboy said. \"That is our mode and modus. That is our central kick.\"\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(About);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport { setPosts } from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass Home extends Component {\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      });\n  }\n\n  render() {\n    return (\n      <Container>\n        Hi.\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Home);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport './Posts.css'\nimport {\n  setPosts,\n  setPost\n} from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass Post extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: null,\n      time: null,\n      error: null,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.post.Content) {\n      return;\n    }\n\n    const postId = parseInt(this.props.match.params.postId);\n    const findPost = (posts, id) => {\n      return posts.find((p) => {\n        return p.Id === id;\n      });\n    };\n\n    if (this.props.posts.length) {\n      const post = findPost(this.props.posts, postId);\n      this.props.setPost(post);\n      return;\n    }\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.loading) {\n          time += 10;\n          this.setState({ time: time });\n          timer(time);\n        }\n      }, 10);\n    };\n\n    this.setState({ loading: true });\n    timer(0);\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        const post = findPost(posts, postId);\n        this.props.setPost(post);\n        this.props.setPosts(posts);\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n  } // end componentDidMount\n\n  render() {\n    return (\n      <Container>\n        {this.state.loading\n          ? this.state.time\n          : this.state.error}\n        <div>\n          <div className=\"title\">{this.props.post.Title}</div>\n          <div className=\"author\">{this.props.post._authorName}</div>\n          <div className=\"content\">{this.props.post.Content}</div>\n        </div>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  post: state.post,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n  setPost: (post) => {\n    return dispatch(setPost(post));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Post);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { Container } from './Container';\nimport './Posts.css';\nimport {\n  setPosts,\n  setPost\n} from './actions';\nimport { fetchPostsAndAuthors } from './fetchPostsAndAuthors';\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: null,\n      time: null,\n      error: null,\n    };\n  }\n\n  setPost(post) {\n    this.props.setPost(post);\n  }\n\n  renderPosts(posts) {\n    return posts.map((post) => {\n      return (\n        <div key={post.Id}>\n          <Link\n            to={`/posts/${post.Id}`}\n            onClick={() => this.setPost(post)}\n            className=\"title\"\n          >{post.Title}</Link>\n          <div className=\"author\">\n            {post.hasOwnProperty('_authorName')\n                ? post._authorName\n                : '?'}\n          </div>\n          <div className=\"content\">\n            {post.Content.slice(0, 230) + ' ...'}\n          </div>\n        </div>\n      );\n    });\n  }\n\n  componentDidMount() {\n    if (this.props.posts.length) {\n      return;\n    }\n\n    const timer = (time) => {\n      setTimeout(() => {\n        if (this.state.loading) {\n          time += 10;\n          this.setState({ time: time });\n          timer(time);\n        }\n      }, 10);\n    };\n\n    this.setState({ loading: true });\n    timer(0);\n\n    fetchPostsAndAuthors()\n      .then((posts) => {\n        this.props.setPosts(posts);\n      })\n      .catch(() => {\n        this.setState({ error: ':(' });\n      })\n      .finally(() => {\n        this.setState({ loading: false });\n      })\n  } // end componentDidMount\n\n  render() {\n    return (\n      <Container>\n        {this.state.loading\n          ? this.state.time\n          : this.state.error}\n        {this.renderPosts(this.props.posts)}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  posts: state.posts,\n  post: state.post,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setPosts: (posts) => {\n    return dispatch(setPosts(posts));\n  },\n  setPost: (post) => {\n    return dispatch(setPost(post));\n  },\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Posts);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { reducers } from './reducers';\n// import * as serviceWorker from './serviceWorker';\n\nimport { App } from './App';\n\nconst rootElement = document.getElementById('root');\nconst store = createStore(reducers);\n\nReactDOM.render(\n  <App store={store} />,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from 'react';\nimport { Route, Link, Switch, HashRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { Header } from './Header';\nimport About from './About';\nimport Home from './Home';\nimport Post from './Post';\nimport Posts from './Posts';\nimport './App.css';\n\nexport const App = (props) => {\n  return (\n    <Provider store={props.store}>\n      <Router>\n        <Header>\n          <div>\n            <span className='header-span'>\n              <Link to='/' className='header-link'>\n                HOME\n              </Link>\n            </span>\n            <span className='header-span'>\n              <Link to='/about' className='header-link'>\n                ABOUT\n              </Link>\n            </span>\n            <span className='header-span'>\n              <Link to='/posts' className='header-link'>\n                POSTS\n              </Link>\n            </span>\n          </div>\n        </Header>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route path='/about' component={About} />\n          <Route path='/posts/:postId' component={Post} />\n          <Route path='/posts' component={Posts} />\n        </Switch>\n      </Router>\n    </Provider>\n  );\n};\n"],"sourceRoot":""}